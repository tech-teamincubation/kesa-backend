openapi: 3.0.0
info:
  title: KESA Backend API
  version: 1.0.0
  description: |
    KESA Learn backend API for user authentication, courses, sessions, registrations, and admin login.

servers:
  - url: https://kesa-backend.onrender.com

paths:
  /health:
    get:
      summary: Health check
      responses:
        '200':
          description: Server health status

  /api/auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [fullName, email, phone, password]
              properties:
                fullName:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User registered
        '409':
          description: User already exists

  /api/auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Returns JWT and user info
        '401':
          description: Invalid credentials

  /api/admin/auth/login:
    post:
      summary: Admin login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Returns admin JWT token
        '401':
          description: Invalid admin credentials

  /api/dashboard/stats:
    get:
      summary: Get dashboard stats for logged-in user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Dashboard stats object
        '401':
          description: Unauthorized

  /api/courses:
    get:
      summary: Get all courses
      responses:
        '200':
          description: List of courses

  /api/courses/{id}:
    get:
      summary: Get a course by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Course details
        '404':
          description: Course not found

  /api/sessions:
    get:
      summary: Get all sessions
      responses:
        '200':
          description: List of sessions

  /api/sessions/{id}:
    get:
      summary: Get a session by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Session details
        '404':
          description: Session not found

  /api/registrations/session/{sessionId}:
    post:
      summary: Register user for a session
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Registered successfully
        '409':
          description: Already registered
        '401':
          description: Unauthorized

  /api/registrations/course/{courseId}:
    post:
      summary: Register user for a course
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Registered successfully
        '409':
          description: Already registered
        '401':
          description: Unauthorized

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
